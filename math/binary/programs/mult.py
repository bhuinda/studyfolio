n_1 = 22300745198206104587877291545865274204880895 # 111111111111111111111111111111111111000000000000000000000000000000000000000000000000000000000000000000000000111111111111111111111111111111111111
n_2 = 356811923173893821835304078548108673370030079 # 1111111111111111111111111111111111111000000000000000000000000000000000000000000000000000000000000000000000000001111111111111111111111111111111111111
n_3 = 5708990770803070336799004567283858835092013055 # 11111111111111111111111111111111111111000000000000000000000000000000000000000000000000000000000000000000000000000011111111111111111111111111111111111111
n_4 = 91343852333015278888257187560654713395716554751 # 111111111111111111111111111111111111111000000000000000000000000000000000000000000000000000000000000000000000000000000111111111111111111111111111111111111111
n_5 = 1461501637329573690207899916843379213695163826175 # 1111111111111111111111111111111111111111000000000000000000000000000000000000000000000000000000000000000000000000000000001111111111111111111111111111111111111111

print(n_1 * n_2 * n_3 * n_4 * n_5)
def string_to_integer_and_digital_sum(number_str, base=10):
    """
    Converts a string to an integer and computes its digital sum.
    
    Args:
        number_str (str): The string representation of the number.
        base (int): The base of the number system (default is 10).
        
    Returns:
        tuple: A tuple containing the integer and its digital sum.
    """
    # Convert the string to an integer
    number = int(number_str, base)
    
    # Calculate the digital sum
    digital_sum = sum(int(digit) for digit in str(number))
    
    return number, digital_sum

# Example usage:
number_str = "4784065728747537197180369736437178690095518709780265737462215474382126590343607768609028084898171137666003791029514128457411243291455987392125544333133609085379324503750542642811913297767474739019775"
integer_value, digital_sum = string_to_integer_and_digital_sum(number_str)
print(f"Integer Value: {integer_value}")
print(f"Digital Sum: {digital_sum}")
